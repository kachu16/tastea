// TOWER OF HANOI
#include <iostream>
using namespace std;

void toi(int n, char src, char aux , char dest) {
    if(n==1)
    {
        cout<<"Move disc "<<n<< " from "<<src<<" to disc "<<dest<<endl;
        return;
    }
    toi(n-1, src ,dest, aux);
    cout<<"Move disc "<<n<< " from "<<src<<" to disc "<<dest<<endl;
    toi(n-1 , aux , src, dest);
}

int main() {
    // Write C++ code here
    int n;
    cin>>n;
    
    toi(n, 'A', 'B', 'C');

    return 0;
}


//MISSING NUMBER
int fun(int arr[], int n) {
    int s=0;
    for(int i = 0; i<n; ++i){
        s +=arr[i];
    }
    return (n*(n-1))/2-s;
}

int fun(int arr[], int n) {
    int s=0;
    for(int i = 1; i<=n; ++i){
        s ^=i;
    }
    for(int i = 0; i<n; ++i){
        s ^=arr[i];
    }
    return s;
}


//TWO SUM PROBLEM
void fun(int a[], int n, int t) {
    int count =0;
    for(int i = 0; i<n; ++i){
        for(int j=i+1; j<n; ++j){
            if(a[i] +a[j] == t){
                cout<<i<<" "<<j<<endl;
                count++;
            }
        }
    }
    if(count == 0)
    cout<<"not found";
}

//MAXIMUM SUM PROBLEM
1) BRUTE FORCE APPROACH
int fun(int a[], int n) {
    int maxsum = 0;
    for(int i = 0; i<n; ++i){
        int currsum = 0;
        for(int j=i; j<n; ++j){
            
            currsum = currsum + a[j];
            
            if(currsum>maxsum)
            maxsum = currsum;
        }
    }
    return maxsum;
}

2)OPTIMIZED APPROACH
int fun(int a[], int n) {
    int maxsum = 0;
    int currsum = 0;
    
    for(int i = 0;i<n;++i) {
        currsum += a[i];
        
        maxsum = max(currsum , maxsum);
        if(currsum<0)
        currsum=0;
    }
    return maxsum;
}


//ROTATE
void reverse(int arr[], int start , int end ){
    
    while(start < end) {
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
}

void fun(int a[], int n, int k) {
    reverse(a , 0 , n-k-1);
    reverse(a,n-k , n-1);
    reverse(a , 0 , n-1);
}



echo "# kjksjkdja" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/kachu16/kjksjkdja.git
git push -u origin main

git remote add origin https://github.com/kachu16/kjksjkdja.git
git branch -M main
git push -u origin main